<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.mapper.AdminMapper">
    <!--resultMap映射-->
    <resultMap id="employeeSalary" type="salary">
        <result column="send_date" property="sendDate"/>
        <result column="base_salary" property="baseSalary"/>
        <result column="attendance_bonus" property="attendanceBonus"/>
        <result column="performance_pay" property="performancePay"/>
    </resultMap>
    <resultMap id="employeeAttendance" type="attendance">
        <result column="absence_record" property="absenceRecord"/>
        <result column="employee_id" property="employeeId"/>
    </resultMap>
    <resultMap id="employeeLeave" type="leave">
        <result column="leave_type" property="leaveType"/>
        <result column="leave_status" property="leaveStatus"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="employee_id" property="employeeId"/>
        <result column="leave_time" property="leaveTime"/>
    </resultMap>
    <resultMap id="employeeQuit" type="quit">
        <result column="employee_id" property="employeeId"/>
        <result column="quit_reason" property="quitReason"/>
        <result column="quit_status" property="quitStatus"/>
        <result column="delete_status" property="deleteStatus"/>
    </resultMap>
    <resultMap id="employeeScore" type="score">
        <result column="employee_id" property="employeeId"/>
        <result column="train_Name" property="trainName"/>
        <result column="train_location" property="trainLocation"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="train_Time" property="trainTime"/>
    </resultMap>
    <resultMap id="employeeTrain" type="train">
        <result column="train_Name" property="trainName"/>
        <result column="train_location" property="trainLocation"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
    </resultMap>
    <resultMap id="announcement" type="announcement">
        <result column="create_time" property="createTime"/>
    </resultMap>

    <update id="updateAnnounce">
        update tb_announcement
        set title       = #{title},
            content     = #{content},
            writer      = #{writer},
            create_time = #{createTime}
        where id = #{id};
    </update>

    <select id="loginSelect" resultType="com.it.pojo.Admin">
        select id,
               username,
               password,
               name,
               role,
               phone,
               avatar,
               email
        from tb_admin
        where username = #{username}
          and password = #{password};
    </select>
    <select id="showAnnounce" resultMap="announcement">
        select id, title, content, writer, create_time
        from tb_announcement
        where title like #{title}
        order by create_time desc
        limit #{begin},10;
    </select>
    <select id="announceCount" resultType="java.lang.Integer">
        select count(*)
        from tb_announcement
        where title like #{title}
        order by create_time desc
    </select>
    <select id="adminSelect" resultType="com.it.pojo.Admin">
        select id,
               username,
               password,
               name,
               role,
               phone,
               avatar,
               email
        from tb_admin
        where id = #{adminId};
    </select>
    <select id="selectAnnounce" resultMap="announcement">
        select id, title, content, writer, create_time
        from tb_announcement
        where id = #{id};
    </select>

    <insert id="addAnnounce">
        insert into tb_announcement (title, content, writer, create_time)
        values (#{title}, #{content}, #{writer}, #{createTime});
    </insert>

    <delete id="deleteAnnounce">
        delete
        from tb_announcement
        where id = #{id};
    </delete>
    <delete id="deleteAnnounces">
        delete
        from tb_announcement where id in
        <foreach collection="announcesId" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="showTrain" resultMap="employeeTrain">
        select id, train_name, train_location, description, start_date, end_date
        from tb_train
        where train_name like #{trainName}
        order by start_date desc, end_date desc
        limit #{begin},10;
    </select>
    <select id="trainCount" resultType="java.lang.Integer">
        select count(*)
        from tb_train
        where train_name like #{trainName}
        order by start_date desc, end_date desc;
    </select>
    <insert id="addTrain">
        insert into tb_train (train_name, train_location, description, start_date, end_date)
        values (#{trainName}, #{trainLocation}, #{description}, #{startDate}, #{endDate});
    </insert>

    <delete id="deleteTrain">
        delete
        from tb_train
        where id = #{id};
    </delete>
    <select id="selectTrain" resultMap="employeeTrain">
        select id, train_name, train_location, description, start_date, end_date
        from tb_train
        where id = #{id};
    </select>
    <update id="updateTrain">
        update tb_train
        set train_name     = #{trainName},
            train_location = #{trainLocation},
            start_date     = #{startDate},
            end_date       = #{endDate},
            description    = #{description}
        where id = #{id};
    </update>
    <delete id="deleteTrains">
        delete
        from tb_train
        where id in
        <foreach collection="trainsId" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="showEmployees" resultType="com.it.pojo.Employee">
        select id, username, password, name, gender, role, phone, avatar, email, department
        from tb_employee
        <where>
            <if test="employeeName != null and employeeName !='' ">
                and `name` like #{employeeName}
            </if>
            <if test="department != null and department !='' ">
                and department like #{department}
            </if>
            <if test="role != null and role !='' ">
                and `role` like #{role}
            </if>
        </where>
        limit #{begin},10;
    </select>
    <select id="employeesCount" resultType="java.lang.Integer">
        select count(*)
        from tb_employee
        <where>
            <if test="employeeName != null and employeeName !='' ">
                and `name` like #{employeeName}
            </if>
            <if test="department != null and department !='' ">
                and department like #{department}
            </if>
            <if test="role != null and role !='' ">
                and `role` like #{role}
            </if>
        </where>
    </select>
    <select id="showEmployees2" resultType="com.it.pojo.Employee">
        select id, username, password, name, gender, role, phone, avatar, email, department
        from tb_employee
        <where>
            <if test="employeeName != null and employeeName !='' ">
                and `name` = #{employeeName}
            </if>
            <if test="department != null and department !='' ">
                and department = #{department}
            </if>
            <if test="role != null and role !='' ">
                and `role` = #{role}
            </if>
        </where>
        limit #{begin},10;
    </select>
    <select id="employeesCount2" resultType="java.lang.Integer">
        select count(*)
        from tb_employee
        <where>
            <if test="employeeName != null and employeeName !='' ">
                and `name` = #{employeeName}
            </if>
            <if test="department != null and department !='' ">
                and department = #{department}
            </if>
            <if test="role != null and role !='' ">
                and `role` = #{role}
            </if>
        </where>
    </select>
    <select id="selectEmployeeByData" resultType="java.lang.Integer">
        select count(*)
        from tb_employee
        where username = #{username}
           or phone = #{phone}
           or email = #{email};
    </select>
    <insert id="addEmployee">
        insert into tb_employee (username, password, name, gender, role, phone, email, department)
        values (#{username}, #{password}, #{name}, #{gender}, #{role}, #{phone}, #{email}, #{department});
    </insert>

    <select id="selectEmployee" resultType="com.it.pojo.Employee">
        select id,
               username,
               password,
               name,
               gender,
               role,
               phone,
               avatar,
               email,
               department
        from tb_employee
        where id = #{id};
    </select>
    <update id="updateEmployee">
        update tb_employee
        set username   = #{username},
            name       = #{name},
            gender     = #{gender},
            role       = #{role},
            phone      = #{phone},
            email      = #{email},
            department = #{department}
        where id = #{id};
    </update>
    <delete id="deleteEmployees">
        delete
        from tb_employee
        where id in
        <foreach collection="employeesId" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>;
    </delete>

    <select id="showLeaves" resultMap="employeeLeave">
        select t2.id,
               t1.name,
               role,
               department,
               leave_type,
               start_date,
               end_date,
               datediff(end_date, start_date) as leave_time,
               reason
        from tb_employee as t1 join tb_leave as t2
        on t1.id = t2.employee_id
        where t2.reason like #{reason} and t2.leave_status = '未处理'
        order by start_date desc, end_date
        limit #{begin},10;
    </select>
    <select id="leavesCount" resultType="java.lang.Integer">
        select count(*)
        from tb_employee as t1 join tb_leave as t2
        on t1.id = t2.employee_id
        where t2.reason like #{reason} and t2.leave_status = '未处理';
    </select>

    <update id="judgeLeave">
        update tb_leave
        set leave_status = #{leaveStatus}
        where id = #{id};
    </update>


    <select id="showQuits" resultMap="employeeQuit">
        select t2.id,
               t1.name,
               t1.department,
               t1.role,
               t2.quit_reason
        from tb_employee as t1 join tb_quit as t2
        on t1.id = t2.employee_id
        where department like #{department} and quit_status = '处理中'and delete_status = '在职'
        limit #{begin},10;
    </select>
    <select id="quitsCount" resultType="java.lang.Integer">
        select count(*)
        from tb_employee as t1 join tb_quit as t2
        on t1.id = t2.employee_id
        where department like #{department} and quit_status = '处理中' and delete_status = '在职'
    </select>

    <update id="judgeQuit">
        update tb_quit
        set quit_status = #{quitStatus},
            delete_status = #{deleteStatus}
            where id = #{id};
    </update>
    <select id="showScores" resultMap="employeeScore">
        select t1.id, t2.name, t2.department,t2.role, t3.train_name, t3.train_location
        from tb_score as t1
                 inner join tb_employee as t2 on t1.employee_id = t2.id
                 inner join tb_train as t3 on t1.train_id = t3.id
        where t1.score = -1
          and t3.train_name like #{trainName}
        order by t3.end_date, t3.start_date desc
        limit #{begin},10;
    </select>
    <select id="scoresCount" resultType="java.lang.Integer">
        select count(*)
        from tb_score as t1
                 inner join tb_employee as t2 on t1.employee_id = t2.id
                 inner join tb_train as t3 on t1.train_id = t3.id
        where t1.score = -1
          and t3.train_name like #{trainName}
        order by t3.end_date, t3.start_date desc
    </select>

    <update id="updateScore">
        update tb_score
        set  score = #{score}
        where id = #{id};
    </update>

    <select id="showAdminInfo" resultType="com.it.pojo.Admin">
        select id, username, password, name, role, phone, avatar, email
        from tb_admin
        where id = #{id};
    </select>

    <update id="updateAdminInfo">
        update tb_admin
        set name = #{name},
            username = #{username},
            avatar = #{avatar},
            phone = #{phone},
            email = #{email}
            where id = #{id};
    </update>
    <select id="adminCount" resultType="java.lang.Integer">
        select count(*)
        from tb_admin
        where username = #{username}
           or phone = #{phone}
           or email = #{email};
    </select>
    <update id="updateAdminPassword">
        update tb_admin
        set password = #{checkPassword}
        where id = #{id};
    </update>

    <select id="showAttendances" resultType="com.it.pojo.Employee">
        select id, username, name, role, department, curdate() AS date
        from tb_employee
        where id not in (select employee_id
                         from tb_quit
                         where delete_status = '离职')
          and id not in (select employee_id
                         from tb_attendance
                         where date = curdate())
          and department like #{department}
        limit #{begin},10;
    </select>
    <select id="attendanceCount" resultType="java.lang.Integer">
        SELECT count(*)
        from tb_employee
        where id not in (select employee_id
                         from tb_quit
                         where delete_status = '离职')
          and id not in (select employee_id
                         from tb_attendance
                         where date = curdate())
          and department like #{department};
    </select>


    <insert id="attendanceJudge">
        insert into tb_attendance (employee_id,name,date, absence_record)
        values (#{attendancesId},#{name},curdate(),#{absenceRecord})
    </insert>

    <select id="showSalaries" resultMap="employeeSalary">
        select id,
               name,
               department,
               money,
               curdate() AS date
        from tb_salary
        where employee_id in (select distinct employee_id
                              from tb_attendance
                              where date = curdate()
                                and absence_record != '全勤')
          and employee_id not in (select employee_id
                                  from tb_quit
                                  where delete_status = '离职')
          and department like #{department} and send_date = curdate()
        limit #{begin},10;
    </select>
    <select id="salariesCount" resultType="java.lang.Integer">
        select count(*)
        from tb_salary
        where employee_id in (select distinct employee_id
                              from tb_attendance
                              where date = curdate()
                                and absence_record != '全勤')
          and employee_id not in (select employee_id
                                  from tb_quit
                                  where delete_status = '离职')
          and department like #{department} and send_date = curdate()
    </select>

    <update id="updateSalary">
        update tb_salary
        set money = #{money}
        where id = #{id};
    </update>



</mapper>